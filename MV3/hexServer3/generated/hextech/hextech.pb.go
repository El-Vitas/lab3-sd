// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.12.4
// source: hextech.proto

package hextech

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region     string   `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	LocalClock []int32  `protobuf:"varint,2,rep,packed,name=LocalClock,proto3" json:"LocalClock,omitempty"`
	Changes    []string `protobuf:"bytes,3,rep,name=changes,proto3" json:"changes,omitempty"`
	Log        []string `protobuf:"bytes,4,rep,name=Log,proto3" json:"Log,omitempty"`
}

func (x *ChangesRequest) Reset() {
	*x = ChangesRequest{}
	mi := &file_hextech_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangesRequest) ProtoMessage() {}

func (x *ChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hextech_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangesRequest.ProtoReflect.Descriptor instead.
func (*ChangesRequest) Descriptor() ([]byte, []int) {
	return file_hextech_proto_rawDescGZIP(), []int{0}
}

func (x *ChangesRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ChangesRequest) GetLocalClock() []int32 {
	if x != nil {
		return x.LocalClock
	}
	return nil
}

func (x *ChangesRequest) GetChanges() []string {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *ChangesRequest) GetLog() []string {
	if x != nil {
		return x.Log
	}
	return nil
}

type ChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acknowledged bool `protobuf:"varint,1,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
}

func (x *ChangesResponse) Reset() {
	*x = ChangesResponse{}
	mi := &file_hextech_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangesResponse) ProtoMessage() {}

func (x *ChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hextech_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangesResponse.ProtoReflect.Descriptor instead.
func (*ChangesResponse) Descriptor() ([]byte, []int) {
	return file_hextech_proto_rawDescGZIP(), []int{1}
}

func (x *ChangesResponse) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

type MergeChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region      string   `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	LocalClockA []int32  `protobuf:"varint,2,rep,packed,name=LocalClockA,proto3" json:"LocalClockA,omitempty"`
	LocalClockB []int32  `protobuf:"varint,3,rep,packed,name=LocalClockB,proto3" json:"LocalClockB,omitempty"`
	Changes     []string `protobuf:"bytes,4,rep,name=changes,proto3" json:"changes,omitempty"`
	LogA        []string `protobuf:"bytes,5,rep,name=LogA,proto3" json:"LogA,omitempty"`
	LogB        []string `protobuf:"bytes,6,rep,name=LogB,proto3" json:"LogB,omitempty"`
}

func (x *MergeChangesRequest) Reset() {
	*x = MergeChangesRequest{}
	mi := &file_hextech_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeChangesRequest) ProtoMessage() {}

func (x *MergeChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hextech_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeChangesRequest.ProtoReflect.Descriptor instead.
func (*MergeChangesRequest) Descriptor() ([]byte, []int) {
	return file_hextech_proto_rawDescGZIP(), []int{2}
}

func (x *MergeChangesRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *MergeChangesRequest) GetLocalClockA() []int32 {
	if x != nil {
		return x.LocalClockA
	}
	return nil
}

func (x *MergeChangesRequest) GetLocalClockB() []int32 {
	if x != nil {
		return x.LocalClockB
	}
	return nil
}

func (x *MergeChangesRequest) GetChanges() []string {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *MergeChangesRequest) GetLogA() []string {
	if x != nil {
		return x.LogA
	}
	return nil
}

func (x *MergeChangesRequest) GetLogB() []string {
	if x != nil {
		return x.LogB
	}
	return nil
}

type MergeChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region      string  `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	VectorClock []int32 `protobuf:"varint,2,rep,packed,name=vector_clock,json=vectorClock,proto3" json:"vector_clock,omitempty"`
}

func (x *MergeChangesResponse) Reset() {
	*x = MergeChangesResponse{}
	mi := &file_hextech_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeChangesResponse) ProtoMessage() {}

func (x *MergeChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hextech_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeChangesResponse.ProtoReflect.Descriptor instead.
func (*MergeChangesResponse) Descriptor() ([]byte, []int) {
	return file_hextech_proto_rawDescGZIP(), []int{3}
}

func (x *MergeChangesResponse) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *MergeChangesResponse) GetVectorClock() []int32 {
	if x != nil {
		return x.VectorClock
	}
	return nil
}

type ReceiveFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region     string   `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	LocalClock []int32  `protobuf:"varint,2,rep,packed,name=LocalClock,proto3" json:"LocalClock,omitempty"`
	Text       []string `protobuf:"bytes,3,rep,name=text,proto3" json:"text,omitempty"`
}

func (x *ReceiveFileRequest) Reset() {
	*x = ReceiveFileRequest{}
	mi := &file_hextech_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveFileRequest) ProtoMessage() {}

func (x *ReceiveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hextech_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveFileRequest.ProtoReflect.Descriptor instead.
func (*ReceiveFileRequest) Descriptor() ([]byte, []int) {
	return file_hextech_proto_rawDescGZIP(), []int{4}
}

func (x *ReceiveFileRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ReceiveFileRequest) GetLocalClock() []int32 {
	if x != nil {
		return x.LocalClock
	}
	return nil
}

func (x *ReceiveFileRequest) GetText() []string {
	if x != nil {
		return x.Text
	}
	return nil
}

type ReceiveFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region      string  `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	VectorClock []int32 `protobuf:"varint,2,rep,packed,name=vector_clock,json=vectorClock,proto3" json:"vector_clock,omitempty"`
}

func (x *ReceiveFileResponse) Reset() {
	*x = ReceiveFileResponse{}
	mi := &file_hextech_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveFileResponse) ProtoMessage() {}

func (x *ReceiveFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hextech_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveFileResponse.ProtoReflect.Descriptor instead.
func (*ReceiveFileResponse) Descriptor() ([]byte, []int) {
	return file_hextech_proto_rawDescGZIP(), []int{5}
}

func (x *ReceiveFileResponse) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ReceiveFileResponse) GetVectorClock() []int32 {
	if x != nil {
		return x.VectorClock
	}
	return nil
}

var File_hextech_proto protoreflect.FileDescriptor

var file_hextech_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x68, 0x65, 0x78, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x68, 0x65, 0x78, 0x74, 0x65, 0x63, 0x68, 0x22, 0x74, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x4c, 0x6f, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x4c, 0x6f, 0x67, 0x22, 0x35,
	0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x13, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6c,
	0x6f, 0x63, 0x6b, 0x41, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x41, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x41, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x42, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x42, 0x22, 0x51, 0x0a, 0x14, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x76,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x60,
	0x0a, 0x12, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0a, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x22, 0x50, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x6f,
	0x63, 0x6b, 0x32, 0xe5, 0x01, 0x0a, 0x07, 0x48, 0x65, 0x78, 0x74, 0x65, 0x63, 0x68, 0x12, 0x43,
	0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x12, 0x17, 0x2e, 0x68, 0x65, 0x78, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x68, 0x65, 0x78, 0x74,
	0x65, 0x63, 0x68, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x68, 0x65, 0x78, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x68, 0x65, 0x78, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x0c, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x1c, 0x2e,
	0x68, 0x65, 0x78, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x68, 0x65,
	0x78, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x13, 0x5a, 0x11, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x68, 0x65, 0x78, 0x74, 0x65, 0x63, 0x68, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hextech_proto_rawDescOnce sync.Once
	file_hextech_proto_rawDescData = file_hextech_proto_rawDesc
)

func file_hextech_proto_rawDescGZIP() []byte {
	file_hextech_proto_rawDescOnce.Do(func() {
		file_hextech_proto_rawDescData = protoimpl.X.CompressGZIP(file_hextech_proto_rawDescData)
	})
	return file_hextech_proto_rawDescData
}

var file_hextech_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_hextech_proto_goTypes = []any{
	(*ChangesRequest)(nil),       // 0: hextech.ChangesRequest
	(*ChangesResponse)(nil),      // 1: hextech.ChangesResponse
	(*MergeChangesRequest)(nil),  // 2: hextech.MergeChangesRequest
	(*MergeChangesResponse)(nil), // 3: hextech.MergeChangesResponse
	(*ReceiveFileRequest)(nil),   // 4: hextech.ReceiveFileRequest
	(*ReceiveFileResponse)(nil),  // 5: hextech.ReceiveFileResponse
}
var file_hextech_proto_depIdxs = []int32{
	0, // 0: hextech.Hextech.ReceiveChanges:input_type -> hextech.ChangesRequest
	4, // 1: hextech.Hextech.ReceiveFile:input_type -> hextech.ReceiveFileRequest
	2, // 2: hextech.Hextech.MergeChanges:input_type -> hextech.MergeChangesRequest
	1, // 3: hextech.Hextech.ReceiveChanges:output_type -> hextech.ChangesResponse
	5, // 4: hextech.Hextech.ReceiveFile:output_type -> hextech.ReceiveFileResponse
	3, // 5: hextech.Hextech.MergeChanges:output_type -> hextech.MergeChangesResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_hextech_proto_init() }
func file_hextech_proto_init() {
	if File_hextech_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hextech_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hextech_proto_goTypes,
		DependencyIndexes: file_hextech_proto_depIdxs,
		MessageInfos:      file_hextech_proto_msgTypes,
	}.Build()
	File_hextech_proto = out.File
	file_hextech_proto_rawDesc = nil
	file_hextech_proto_goTypes = nil
	file_hextech_proto_depIdxs = nil
}
